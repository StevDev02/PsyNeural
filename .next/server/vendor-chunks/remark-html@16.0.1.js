"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/remark-html@16.0.1";
exports.ids = ["vendor-chunks/remark-html@16.0.1"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/remark-html@16.0.1/node_modules/remark-html/lib/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/remark-html@16.0.1/node_modules/remark-html/lib/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ remarkHtml)\n/* harmony export */ });\n/* harmony import */ var hast_util_sanitize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hast-util-sanitize */ \"(rsc)/./node_modules/.pnpm/hast-util-sanitize@5.0.1/node_modules/hast-util-sanitize/lib/index.js\");\n/* harmony import */ var mdast_util_to_hast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mdast-util-to-hast */ \"(rsc)/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/index.js\");\n/* harmony import */ var hast_util_to_html__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hast-util-to-html */ \"(rsc)/./node_modules/.pnpm/hast-util-to-html@9.0.1/node_modules/hast-util-to-html/lib/index.js\");\n/**\n * @typedef {import('hast-util-sanitize').Schema} Schema\n * @typedef {import('hast-util-to-html').Options} ToHtmlOptions\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-to-hast').Handlers} Handlers\n * @typedef {import('unified').Compiler<Root, string>} Compiler\n * @typedef {import('unified').Processor<undefined, undefined, undefined, Root, string>} Processor\n */\n\n/**\n * @typedef ExtraOptionsFields\n *   Extra fields.\n * @property {Readonly<Handlers> | null | undefined} [handlers]\n *   How to turn mdast nodes into hast nodes (optional);\n *   passed to `mdast-util-to-hast`.\n * @property {Readonly<Schema> | boolean | null | undefined} [sanitize]\n *   Sanitize the output, and how (default: `true`).\n *\n * @typedef {ToHtmlOptions & ExtraOptionsFields} Options\n *   Configuration.\n */\n\n\n\n\n\n/** @type {Readonly<Options>} */\nconst emptyOptions = {}\n\n/**\n * Serialize markdown as HTML.\n *\n * ###### Notes\n *\n * Passing `sanitize: false` is dangerous.\n * It allows arbitrary HTML and does not sanitize elements.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nfunction remarkHtml(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = this\n  const {handlers, sanitize: clean, ...toHtmlOptions} = options || emptyOptions\n  let allowDangerousHtml = false\n  /** @type {Readonly<Schema> | undefined} */\n  let schema\n\n  if (typeof clean === 'boolean') {\n    allowDangerousHtml = !clean\n  } else if (clean) {\n    schema = clean\n  }\n\n  self.compiler = compiler\n\n  /**\n   * @type {Compiler}\n   */\n  function compiler(tree, file) {\n    const hast = (0,mdast_util_to_hast__WEBPACK_IMPORTED_MODULE_0__.toHast)(tree, {handlers, allowDangerousHtml})\n    const safeHast = allowDangerousHtml ? hast : (0,hast_util_sanitize__WEBPACK_IMPORTED_MODULE_1__.sanitize)(hast, schema)\n    const result = (0,hast_util_to_html__WEBPACK_IMPORTED_MODULE_2__.toHtml)(safeHast, {...toHtmlOptions, allowDangerousHtml})\n\n    if (file.extname) {\n      file.extname = '.html'\n    }\n\n    // Add an eof eol.\n    return tree &&\n      tree.type === 'root' &&\n      result &&\n      /[^\\r\\n]/.test(result.charAt(result.length - 1))\n      ? result + '\\n'\n      : result\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVtYXJrLWh0bWxAMTYuMC4xL25vZGVfbW9kdWxlcy9yZW1hcmstaHRtbC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0EsYUFBYSxxQ0FBcUM7QUFDbEQsYUFBYSxxQ0FBcUM7QUFDbEQsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSx1Q0FBdUM7QUFDcEQsYUFBYSwwQ0FBMEM7QUFDdkQsYUFBYSw0RUFBNEU7QUFDekY7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYyx1Q0FBdUM7QUFDckQ7QUFDQTtBQUNBLGNBQWMsK0NBQStDO0FBQzdEO0FBQ0E7QUFDQSxhQUFhLG9DQUFvQztBQUNqRDtBQUNBOztBQUUyQztBQUNGO0FBQ0Q7O0FBRXhDLFdBQVcsbUJBQW1CO0FBQzlCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHNDQUFzQztBQUNqRDtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ2U7QUFDZixhQUFhLFdBQVc7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsU0FBUyw2Q0FBNkM7QUFDdEQ7QUFDQSxhQUFhLDhCQUE4QjtBQUMzQzs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLGlCQUFpQiwwREFBTSxRQUFRLDZCQUE2QjtBQUM1RCxpREFBaUQsNERBQVE7QUFDekQsbUJBQW1CLHlEQUFNLFlBQVkscUNBQXFDOztBQUUxRTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHN5bmV1cmFsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlbWFyay1odG1sQDE2LjAuMS9ub2RlX21vZHVsZXMvcmVtYXJrLWh0bWwvbGliL2luZGV4LmpzPzgxZTQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0LXV0aWwtc2FuaXRpemUnKS5TY2hlbWF9IFNjaGVtYVxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdC11dGlsLXRvLWh0bWwnKS5PcHRpb25zfSBUb0h0bWxPcHRpb25zXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLlJvb3R9IFJvb3RcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0LXV0aWwtdG8taGFzdCcpLkhhbmRsZXJzfSBIYW5kbGVyc1xuICogQHR5cGVkZWYge2ltcG9ydCgndW5pZmllZCcpLkNvbXBpbGVyPFJvb3QsIHN0cmluZz59IENvbXBpbGVyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCd1bmlmaWVkJykuUHJvY2Vzc29yPHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFJvb3QsIHN0cmluZz59IFByb2Nlc3NvclxuICovXG5cbi8qKlxuICogQHR5cGVkZWYgRXh0cmFPcHRpb25zRmllbGRzXG4gKiAgIEV4dHJhIGZpZWxkcy5cbiAqIEBwcm9wZXJ0eSB7UmVhZG9ubHk8SGFuZGxlcnM+IHwgbnVsbCB8IHVuZGVmaW5lZH0gW2hhbmRsZXJzXVxuICogICBIb3cgdG8gdHVybiBtZGFzdCBub2RlcyBpbnRvIGhhc3Qgbm9kZXMgKG9wdGlvbmFsKTtcbiAqICAgcGFzc2VkIHRvIGBtZGFzdC11dGlsLXRvLWhhc3RgLlxuICogQHByb3BlcnR5IHtSZWFkb25seTxTY2hlbWE+IHwgYm9vbGVhbiB8IG51bGwgfCB1bmRlZmluZWR9IFtzYW5pdGl6ZV1cbiAqICAgU2FuaXRpemUgdGhlIG91dHB1dCwgYW5kIGhvdyAoZGVmYXVsdDogYHRydWVgKS5cbiAqXG4gKiBAdHlwZWRlZiB7VG9IdG1sT3B0aW9ucyAmIEV4dHJhT3B0aW9uc0ZpZWxkc30gT3B0aW9uc1xuICogICBDb25maWd1cmF0aW9uLlxuICovXG5cbmltcG9ydCB7c2FuaXRpemV9IGZyb20gJ2hhc3QtdXRpbC1zYW5pdGl6ZSdcbmltcG9ydCB7dG9IYXN0fSBmcm9tICdtZGFzdC11dGlsLXRvLWhhc3QnXG5pbXBvcnQge3RvSHRtbH0gZnJvbSAnaGFzdC11dGlsLXRvLWh0bWwnXG5cbi8qKiBAdHlwZSB7UmVhZG9ubHk8T3B0aW9ucz59ICovXG5jb25zdCBlbXB0eU9wdGlvbnMgPSB7fVxuXG4vKipcbiAqIFNlcmlhbGl6ZSBtYXJrZG93biBhcyBIVE1MLlxuICpcbiAqICMjIyMjIyBOb3Rlc1xuICpcbiAqIFBhc3NpbmcgYHNhbml0aXplOiBmYWxzZWAgaXMgZGFuZ2Vyb3VzLlxuICogSXQgYWxsb3dzIGFyYml0cmFyeSBIVE1MIGFuZCBkb2VzIG5vdCBzYW5pdGl6ZSBlbGVtZW50cy5cbiAqXG4gKiBAcGFyYW0ge1JlYWRvbmx5PE9wdGlvbnM+IHwgbnVsbCB8IHVuZGVmaW5lZH0gW29wdGlvbnNdXG4gKiAgIENvbmZpZ3VyYXRpb24gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gKiAgIE5vdGhpbmcuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlbWFya0h0bWwob3B0aW9ucykge1xuICAvKiogQHR5cGUge1Byb2Nlc3Nvcn0gKi9cbiAgLy8gQHRzLWV4cGVjdC1lcnJvcjogVFMgaW4gSlNEb2MgZ2VuZXJhdGVzIHdyb25nIHR5cGVzIGlmIGB0aGlzYCBpcyB0eXBlZCByZWd1bGFybHkuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSB1bmljb3JuL25vLXRoaXMtYXNzaWdubWVudFxuICBjb25zdCBzZWxmID0gdGhpc1xuICBjb25zdCB7aGFuZGxlcnMsIHNhbml0aXplOiBjbGVhbiwgLi4udG9IdG1sT3B0aW9uc30gPSBvcHRpb25zIHx8IGVtcHR5T3B0aW9uc1xuICBsZXQgYWxsb3dEYW5nZXJvdXNIdG1sID0gZmFsc2VcbiAgLyoqIEB0eXBlIHtSZWFkb25seTxTY2hlbWE+IHwgdW5kZWZpbmVkfSAqL1xuICBsZXQgc2NoZW1hXG5cbiAgaWYgKHR5cGVvZiBjbGVhbiA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgYWxsb3dEYW5nZXJvdXNIdG1sID0gIWNsZWFuXG4gIH0gZWxzZSBpZiAoY2xlYW4pIHtcbiAgICBzY2hlbWEgPSBjbGVhblxuICB9XG5cbiAgc2VsZi5jb21waWxlciA9IGNvbXBpbGVyXG5cbiAgLyoqXG4gICAqIEB0eXBlIHtDb21waWxlcn1cbiAgICovXG4gIGZ1bmN0aW9uIGNvbXBpbGVyKHRyZWUsIGZpbGUpIHtcbiAgICBjb25zdCBoYXN0ID0gdG9IYXN0KHRyZWUsIHtoYW5kbGVycywgYWxsb3dEYW5nZXJvdXNIdG1sfSlcbiAgICBjb25zdCBzYWZlSGFzdCA9IGFsbG93RGFuZ2Vyb3VzSHRtbCA/IGhhc3QgOiBzYW5pdGl6ZShoYXN0LCBzY2hlbWEpXG4gICAgY29uc3QgcmVzdWx0ID0gdG9IdG1sKHNhZmVIYXN0LCB7Li4udG9IdG1sT3B0aW9ucywgYWxsb3dEYW5nZXJvdXNIdG1sfSlcblxuICAgIGlmIChmaWxlLmV4dG5hbWUpIHtcbiAgICAgIGZpbGUuZXh0bmFtZSA9ICcuaHRtbCdcbiAgICB9XG5cbiAgICAvLyBBZGQgYW4gZW9mIGVvbC5cbiAgICByZXR1cm4gdHJlZSAmJlxuICAgICAgdHJlZS50eXBlID09PSAncm9vdCcgJiZcbiAgICAgIHJlc3VsdCAmJlxuICAgICAgL1teXFxyXFxuXS8udGVzdChyZXN1bHQuY2hhckF0KHJlc3VsdC5sZW5ndGggLSAxKSlcbiAgICAgID8gcmVzdWx0ICsgJ1xcbidcbiAgICAgIDogcmVzdWx0XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/remark-html@16.0.1/node_modules/remark-html/lib/index.js\n");

/***/ })

};
;